(define (reverse-general L)
  (cond((null? L) '())
       ((list? L)
        `(append (reverse-general (cdr L))
                (list (reverse-general (car L)))
         )
       )
       (else L)
  )
)

(define (sum-up-numbers-simple L)
  ((null? L)
   ((list? L)
   )
  )
)